import{_ as n,o as s,c as a,a as e}from"./app-CnbvU9a-.js";const t="/assets/bleed-BJP2BPaG.png",p={},i=e(`<h1 id="面向-web-打印的网页设计" tabindex="-1"><a class="header-anchor" href="#面向-web-打印的网页设计" aria-hidden="true">#</a> 面向 web 打印的网页设计</h1><h2 id="media-print-查询" tabindex="-1"><a class="header-anchor" href="#media-print-查询" aria-hidden="true">#</a> @media print 查询</h2><p>响应式设计是通过使用媒体查询实现的：一组 CSS 属性，当你的网页在平板电脑终端、手机、电视屏幕等上呈现时，你可以使用它们来定义样式。 其中一个媒体查询， @media print 是专门用于打印网页的。例如，你可以删除菜单、图标，更改超链接的显示方式等。 作为一个填充，Paged.js 将使用该媒体查询下的 CSS 规则来定义你的书的样式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token comment">/* All your print styles go here */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你不使用 Paged.js，那么这个媒体查询中声明的样式只会在浏览器打印对话框中打印网页(或保存为 PDF)时才应用， 例如，字体大小可能会因屏幕和打印机而异，或者为了节省墨水可能会删除图像(使用 display:none )， 如果你使用 Paged.js，那么你就能在浏览器中预览打印时样式的效果。</p><h2 id="page-规则" tabindex="-1"><a class="header-anchor" href="#page-规则" aria-hidden="true">#</a> @page 规则</h2><p>@page 规则允许你指定页面模型的各个方面，比如尺寸、方向、背景、边距、裁剪、注册标志等等，所有影响页面布局的 CSS 属性都必须在其中声明。</p><h2 id="页面-size-属性" tabindex="-1"><a class="header-anchor" href="#页面-size-属性" aria-hidden="true">#</a> 页面 size 属性</h2><p><code>size</code>属性指定页面的大小(不包括溢出)。这个固定的大小可以用厘米( cm )、毫米( mm )或英寸( in )来声明。 第一个数字是文档的宽度，第二个数字是高度。默认情况下，Paged.js 使用字号大小(8.5in × 11in)。 还可以使用关键字指定页面大小，这些关键字可以与页面方向( portrait 或 landscape )结合使用。默认情况下，页面总是以纵向打印。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 定义一个自定义大小 */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">size</span><span class="token punctuation">:</span> 140mm 200mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 使用A5纸张 */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">size</span><span class="token punctuation">:</span> A5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 使用A4纸横向 */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">size</span><span class="token punctuation">:</span> A4 landscape<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">界面大小关键字</th><th style="text-align:right;">大小</th></tr></thead><tbody><tr><td style="text-align:left;">A0</td><td style="text-align:right;">841 × 1189 mm</td></tr><tr><td style="text-align:left;">A1</td><td style="text-align:right;">594 × 841 mm</td></tr><tr><td style="text-align:left;">A2</td><td style="text-align:right;">420 × 594 mm</td></tr><tr><td style="text-align:left;">A3</td><td style="text-align:right;">297 × 420 mm</td></tr><tr><td style="text-align:left;">A4</td><td style="text-align:right;">210 × 297 mm</td></tr><tr><td style="text-align:left;">A5</td><td style="text-align:right;">148 × 210 mm</td></tr><tr><td style="text-align:left;">A6</td><td style="text-align:right;">105 × 148 mm</td></tr><tr><td style="text-align:left;">A7</td><td style="text-align:right;">74 × 105 mm</td></tr><tr><td style="text-align:left;">A10</td><td style="text-align:right;">26 × 37 mm</td></tr><tr><td style="text-align:left;">B4</td><td style="text-align:right;">250 × 353 mm</td></tr><tr><td style="text-align:left;">B5</td><td style="text-align:right;">176 × 250 mm</td></tr><tr><td style="text-align:left;">letter</td><td style="text-align:right;">8.5 × 11 in</td></tr><tr><td style="text-align:left;">legal</td><td style="text-align:right;">8.5 × 14 in</td></tr><tr><td style="text-align:left;">ledger</td><td style="text-align:right;">11 × 17 in</td></tr></tbody></table><h2 id="css-变量" tabindex="-1"><a class="header-anchor" href="#css-变量" aria-hidden="true">#</a> CSS 变量</h2><p>你不能使用 CSS 变量来定义页面大小，因为浏览器不支持。</p><p>然而，Paged.js 从你的声明中创建了一组自定义属性，并使用它们来布局。因此，如果你需要它们用于计算，你可以在文档中复用它们：</p><ul><li><p><code>var(--pagedjs-pagebox-width)</code> 用于设置页面宽度</p></li><li><p><code>var(--pagedjs-pagebox-height)</code> 用于设置页面高度</p></li></ul><p>警告：浏览器只能理解文档的一个页面大小。如果您需要创建具有不同页面大小的文档，您将需要创建两个单独的 HTML 文件并生成两个 PDF。</p><h2 id="边距大小属性" tabindex="-1"><a class="header-anchor" href="#边距大小属性" aria-hidden="true">#</a> 边距大小属性</h2><p>页面的边距需要在 @page 规则中声明，语法与通常使用的边距相同，可以使用像厘米( cm )毫米( mm )，英寸( in )或像素( px )这样的长度单位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 20mm 30mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，边距设置为 1 英寸。</p><p>其他不同语法的示例：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 所有边距为 30mm */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 30mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 上下边距 3in,左右边距 2in */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 3in 4in<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 各个不同的边距 */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">margin-top</span><span class="token punctuation">:</span> 20mm<span class="token punctuation">;</span>
  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 25mm<span class="token punctuation">;</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 10mm<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> 35mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对页或正反面" tabindex="-1"><a class="header-anchor" href="#对页或正反面" aria-hidden="true">#</a> 对页或正反面</h2><p>自古登堡（西方活字印刷术发明人）以来，书籍的设计考虑了对页：左页和右页通常以折线为轴对称。 如果需要改变，可以在 @page 规则上使用 :left 和 :right 伪选择器，并为页面设置不同的样式。</p><p>让我们看一个有不同 margin 的例子：外部页边距比内部页边距大。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@page</span><span class="token punctuation">:</span> left</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 25mm<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> 10mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@page</span><span class="token punctuation">:</span> right</span> <span class="token punctuation">{</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 10mm<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> 25mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的文档是一本正反页的书(即不需要对页)，你可以用同样的方式使用 :recto 和 :verso 页选择器。</p><h2 id="分页符" tabindex="-1"><a class="header-anchor" href="#分页符" aria-hidden="true">#</a> 分页符</h2><p>当内容无法放入页面时，Paged.js 会自动创建分页符，但你可能需要控制这种分页，比如在书中，你可能希望所有章节都从右页开始，有一些属性可以帮助你做到这一点。</p><p><code>break-before</code> 属性表示元素应该从新页面开始，可以是:</p><ul><li>使用 <code>break-before: page</code> 时，元素可以从任何新页开始；</li><li>元素开始于下一个右页或下一个左页(如果需要，会自动创建一个 <code>blank</code> 页)；</li><li>使用 <code>break-before: recto</code> 或 <code>break-before: verso</code> 可以替代 <code>break-before: right</code> 或 <code>break-before: left</code> ；</li></ul><p>假设你所有的书章节都在 <code>&lt;section&gt;</code> 元素中，并且带有 <code>chapter</code> 样式类，你希望你的章节总是从右页开始，你可以这样写：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.chapter</span> <span class="token punctuation">{</span>
  <span class="token property">break-before</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以在内联元素上使用分页符，例如，下面的代码强制二级标题总是在新页面开始：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h2</span> <span class="token punctuation">{</span>
  <span class="token property">break-before</span><span class="token punctuation">:</span> page<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你喜欢，也可以用同样的方式使用 <code>break-after</code> ：</p><ul><li><code>break-after: page</code> 将把 元素后面的内容推到下一个页面；</li><li><code>break-after: right</code> 或 <code>break-after: left</code> 将把内容推送到下一个右/左页面的元素后面;</li><li><code>break-after: recto</code> 或 <code>break-after: verso</code> 会将内容推送到下一个 recto 或 verso 页面的元素之后;</li></ul><h2 id="页面的伪类选择器" tabindex="-1"><a class="header-anchor" href="#页面的伪类选择器" aria-hidden="true">#</a> 页面的伪类选择器</h2><p>W3C 为特定页面定义了伪类选择器，我们已经见过 <code>:left</code> 和 <code>:right</code> 选择器，但还有一些其他有用的选择器：</p><ul><li><code>:first</code>，选择文档的第一页</li><li><code>nth()</code> ，让你指定你想选择的页码(例如：<code>@page:nth(3)</code> 选择第三页)</li><li><code>:blank</code>，选择文档中的所有空白页(空白页是强制左、右换页的结果)</li></ul><p>被伪类选择器匹配的页面也可以被其他页面伪类匹配。应用的规则是根据 CSS 级联原则定义的。</p><h2 id="bleeds-出血" tabindex="-1"><a class="header-anchor" href="#bleeds-出血" aria-hidden="true">#</a> Bleeds（出血）</h2><p><img src="`+t+`" alt="img"></p><p>为了确保在打印时不会有任何可见的白纸，我们使用 <code>bleed</code> 属性，它指定了页面框外溢出的区域的大小，它不会影响页面上内容的空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">bleed</span><span class="token punctuation">:</span> 6mm<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="剪切和十字标记" tabindex="-1"><a class="header-anchor" href="#剪切和十字标记" aria-hidden="true">#</a> 剪切和十字标记</h2><p>你可以在页面框外添加裁剪标记以便于裁剪，对于专业印刷，也可以添加十字标标记，这些标记用于在印刷过程中对齐纸张。</p><p>这两种类型的标记必须添加在相同的 marks 属性中，您可以使用其中一种或两种。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* crop: 将显示裁切标记。指示应在何处裁切页面
cross: 十字标记将显示。用于对齐纸张 */</span>
<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">marks</span><span class="token punctuation">:</span> crop cross<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
  <span class="token property">marks</span><span class="token punctuation">:</span> crop<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码回顾" tabindex="-1"><a class="header-anchor" href="#代码回顾" aria-hidden="true">#</a> 代码回顾</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token atrule"><span class="token rule">@page</span></span> <span class="token punctuation">{</span>
    <span class="token property">size</span><span class="token punctuation">:</span> 140mm 200mm<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10mm 15mm<span class="token punctuation">;</span>
    <span class="token property">bleed</span><span class="token punctuation">:</span> 6mm<span class="token punctuation">;</span>
    <span class="token property">marks</span><span class="token punctuation">:</span> crop cross<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token atrule"><span class="token rule">@page</span><span class="token punctuation">:</span> left</span> <span class="token punctuation">{</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 35mm<span class="token punctuation">;</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> 15mm<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token atrule"><span class="token rule">@page</span><span class="token punctuation">:</span> right</span> <span class="token punctuation">{</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 15mm<span class="token punctuation">;</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> 35mm<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.chapter</span> <span class="token punctuation">{</span>
    <span class="token property">break-before</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),l=[i];function c(d,o){return s(),a("div",null,l)}const u=n(p,[["render",c],["__file","web-design-print.html.vue"]]);export{u as default};
